histogram(fdcReceiving$CtoN, group = fdcReceiving$dow)
mean(fdcReceiving$CtoN)
?mean
mean(fdcReceiving$CtoN, group = dow)
mean(fdcReceiving$CtoN, group = dow)
mean(fdcReceiving$CtoN, group = dow,data = fdcReceiving)
mean(CtoN, group = dow,data = fdcReceiving)
?tapply
histogram(fdcReceiving$CtoN,fdcReceiving$dow group = fdcReceiving$dow)
tapply(fdcReceiving$CtoN, fdcReceiving$dow,mean)
histogram(fdcReceiving$CtoN, group = fdcReceiving$dow)
hist(fdcReceiving$CtoN[fdcReceiving$dow=="Mon",])
hist(fdcReceiving$CtoN[fdcReceiving$dow=="Monday",])
hist(fdcReceiving$CtoN[fdcReceiving$dow=="Monday"],)
hist(fdcReceiving$CtoN[fdcReceiving$dow=="Monday"])
hist(fdcReceiving$CtoN[fdcReceiving$dow==c("Monday","Tuesday")])
hist(fdcReceiving$CtoN[fdcReceiving$dow=="Monday"], col="gray", labels = TRUE)
hist(fdcReceiving$CtoN[fdcReceiving$dow=="Monday"], col="gray", labels = TRUE, title=null)
hist(fdcReceiving$CtoN[fdcReceiving$dow=="Monday"], col="gray", labels = TRUE, title="")
hist(fdcReceiving$CtoN)
q<-qqnorm(fdcReceiving$CtoN)
refined<-fdcReceiving[which(q$y<=12),]
qqnorm(refined$CtoN)
tapply(fdcReceiving$extCubicInches, bydow, mean, na.rm=T)
mean(fdcReceiving$CtoN)
mean(fdcReceiving$lines/fdcReceiving$extCubicInches)
tapply(fdcReceiving$extCubicInches, bydow, mean, na.rm=T)
median(fdcReceiving$CtoN)
barchart(m1,m2)
m1<-mean(fdcReceiving$CtoN) # overall average
m2<-median(fdcReceiving$CtoN)
barchart(m1,m2)
barchart(c(m1,m2))
c(m1,m2)
plot(c(m1,m2))
barplot(c(m1,m2))
rnorm(100)
plot(rnorm(100))
hist(rnorm(100))
hist(fdcReceiving$CtoN[fdcReceiving$dow=="Monday"], col="gray", labels = TRUE)
densityplot(rnorm(100))
# Third round: Is histogram good enough?
densityplot(rnorm(100), frequency=T)
hist(rnorm(100), frequency =T)
hist(rnorm(100), frequency =F)
hist(rnorm(100), freq=T)
densityplot(rnorm(1000), frequency=T)
densityplot(~CtoN, group = dow, data = fdcReceiving[which(fdcReceiving$CtoN<30),], auto.key=T)
bymedian<-with(fdcReceiving, reorder(dow, -CtoN, median)) # reorder the factor by median of CtoN
bydow<-factor(fdcReceiving$dow, levels(fdcReceiving$dow)[c(4,2,6,7,5,1,3)]) # reorder the factor by day of the week
boxplot(CtoN~bydow, data = fdcReceiving, axes=T,outline=F, las=2)
boxplot(CtoN~bymedian, data = fdcReceiving, axes=T,outline=F, las=2)
boxplot(CtoN~bydow, data = fdcReceiving, axes=T,outline=F, las=2)
boxplot(CtoN~bymedian, data = fdcReceiving, axes=T,outline=F, las=2)
fdcReceiving$dow[which(q$y<=12),]
fdcReceiving[which(q$y<=12),]$dow
fdcReceiving[which(q$y<=12),]
fdcReceiving[which(q$y>12),]$dow
fdcReceiving[which(q$y>12),]$dow
fdcReceiving[which(q$y>12),]
hist(rnorm(1000), freq=T)
?rnorm
hist(rnorm(1000, mean=100)+norm(1000, mean=50), freq=T)
hist(rnorm(1000, mean=100)+rnorm(1000, mean=50), freq=T)
densityplot(rnorm(1000, mean=100)+rnorm(1000, mean=50), freq=T)
densityplot(rnorm(1000, mean=100)+rnorm(1000, mean=1000), freq=T)
hist(rnorm(1000, mean=100)+rnorm(1000, mean=50), freq=T)
densityplot(rnorm(1000, mean=100)+rnorm(1000, mean=10000), freq=T)
mean(rnorm(100, mean=50))
mean(rnorm(100, mean=100))
plot(density(rnorm(100)))
plot(density(rnorm(1000)))
plot(density(rnorm(1000, mean=0)+rnorm(1000,mean=100)))
plot(density(rnorm(1000, mean=120)+rnorm(1000,mean=100)))
plot(density(c(rnorm(1000, mean=50),rnorm(1000,mean=100)))
)
plot(density(c(rnorm(1000, mean=50),rnorm(1000,mean=100))))
plot(density(c(rnorm(1000, mean=80),rnorm(1000,mean=100))))
plot(density(c(rnorm(1000, mean=110),rnorm(1000,mean=100))))
densityplot(c(rnorm(1000, mean=110),rnorm(1000,mean=100)))
2peak<-c(rnorm(1000, mean=110),rnorm(1000,mean=100))
2peak<-c(rnorm(1000, mean=110),rnorm(1000,mean=100))
c(rnorm(1000, mean=110),rnorm(1000,mean=100))
2peak <- c(rnorm(1000, mean=110),rnorm(1000,mean=100))
test <- c(rnorm(1000, mean=110),rnorm(1000,mean=100))
2peaktest <- c(rnorm(1000, mean=110),rnorm(1000,mean=100))
twopeak <- c(rnorm(1000, mean=110),rnorm(1000,mean=100))
densityplot(twoPeak)
twoPeak <- c(rnorm(1000, mean=110),rnorm(1000,mean=100))
densityplot(twoPeak)
mean(onePeak)
onePeak <- rnorm(1000, mean=100)
mean(onePeak)
mean(twoPeak)
hist(twoPeak)
?rnorm
twoPeak <- c(rnorm(1000, mean=110, sd=20),rnorm(1000,sd=20,mean=100))
densityplot(twoPeak)
twoPeak <- c(rnorm(1000, mean=110, sd=5),rnorm(1000,sd=5,mean=100))
densityplot(twoPeak)
hist(twoPeak)
twoPeak <- c(rnorm(1000, mean=110, sd=2),rnorm(1000,sd=2,mean=100))
hist(twoPeak)
densityplot(twoPeak)
twoPeak <- c(rnorm(1000, mean=110, sd=3),rnorm(1000,sd=3,mean=100))
hist(twoPeak)
densityplot(twoPeak)
hist(twoPeak)
twoPeak <- c(rnorm(1000, mean=110, sd=4),rnorm(1000,sd=4,mean=100))
densityplot(twoPeak)
hist(twoPeak)
densityplot(twoPeak)
hist(twoPeak)
twoPeak <- c(rnorm(1000, mean=110, sd=4),rnorm(1000,sd=4,mean=100))
densityplot(twoPeak)
densityplot(twoPeak)
mean(twoPeak)
hist(twoPeak)
median(twoPeak)
hist(twoPeak)
densityplot(twoPeak)
densityplot(~CtoN, group = dow, data = fdcReceiving[which(fdcReceiving$CtoN<30),], auto.key=T)
bymedian<-with(fdcReceiving, reorder(dow, -CtoN, median)) # reorder the factor by median of CtoN
bydow<-factor(fdcReceiving$dow, levels(fdcReceiving$dow)[c(4,2,6,7,5,1,3)]) # reorder the factor by day of the week
boxplot(CtoN~bydow, data = fdcReceiving, axes=T,outline=F, las=2)
densityplot(~CtoN, group = dow, data = fdcReceiving[which(fdcReceiving$CtoN<30),], auto.key=T)
bymedian<-with(fdcReceiving, reorder(dow, -CtoN, median)) # reorder the factor by median of CtoN
bydow<-factor(fdcReceiving$dow, levels(fdcReceiving$dow)[c(4,2,6,7,5,1,3)]) # reorder the factor by day of the week
densityplot(~CtoN, group = dow, data = fdcReceiving[which(fdcReceiving$CtoN<30),], auto.key=T)
densityplot(~CtoN, data = fdcReceiving[which(fdcReceiving$CtoN<30),], auto.key=T)
densityplot(~CtoN, group = dow, data = fdcReceiving[which(fdcReceiving$CtoN<30),], auto.key=T)
densityplot(~CtoN, data = fdcReceiving[which(fdcReceiving$CtoN<30),], auto.key=T)
hist(fdcReceiving$CtoN)
hist(fdcReceiving$CtoN[fdcReceiving$dow=="Monday"], col="gray", labels = TRUE)
densityplot(~CtoN, data = fdcReceiving[which(fdcReceiving$CtoN<30),], auto.key=T)
densityplot(~CtoN, group = dow, data = fdcReceiving[which(fdcReceiving$CtoN<30),], auto.key=T)
bymedian<-with(fdcReceiving, reorder(dow, -CtoN, median)) # reorder the factor by median of CtoN
bydow<-factor(fdcReceiving$dow, levels(fdcReceiving$dow)[c(4,2,6,7,5,1,3)]) # reorder the factor by day of the week
boxplot(CtoN~bydow, data = fdcReceiving, axes=T,outline=F, las=2)
boxplot(CtoN~bymedian, data = fdcReceiving, axes=T,outline=F, las=2)
barplot(c(m1,m2))
barplot(c(m1,m2), label=T)
barplot(c(m1,m2), labels=T)
barplot(c(m1,m2), labels=TRUE)
tapply(fdcReceiving$CtoN, fdcReceiving$dow,mean) # average by day of the week
bydow<-tapply(fdcReceiving$CtoN, fdcReceiving$dow,mean) # average by day of the week
barplot(bydow)
bydow<-tapply(fdcReceiving$CtoN, fdcReceiving$dow,mean) # average by day of the week
hist(fdcReceiving$CtoN)
layout(matrix(c(1,2,3,4,5,6,7),nrow=3,ncol=3,byrow=TRUE))
for (storage in levels(fdcReceiving$dow)){
print(storage)
histPercent(subset(fdcReceiving, dow== storage)$CtoN, ylab="%",xlab="utilization", main=storage)
#histogram(subset(temp, (CustomerType=="Not WAGs" & Storage== storage))$utilization, main=storage, xlab="After WAGs")
}
layout(matrix(c(1,2,3,4,5,6,7),nrow=3,ncol=3,byrow=TRUE))
for (storage in levels(fdcReceiving$dow)){
print(storage)
hist(fdcReceiving$CtoN[fdcReceiving$dow==storage], col="gray", labels = TRUE)
#histogram(subset(temp, (CustomerType=="Not WAGs" & Storage== storage))$utilization, main=storage, xlab="After WAGs")
}
layout(matrix(c(1,2,3,4,5,6,7),nrow=3,ncol=3,byrow=TRUE))
for (storage in levels(fdcReceiving$dow)){
print(storage)
hist(fdcReceiving$CtoN[fdcReceiving$dow==storage], col="gray", labels = TRUE)
#histogram(subset(temp, (CustomerType=="Not WAGs" & Storage== storage))$utilization, main=storage, xlab="After WAGs")
}
print(storage)
hist(fdcReceiving$CtoN[fdcReceiving$dow==storage], col="gray", labels = TRUE)
for (storage in levels(fdcReceiving$dow)){
print(storage)
hist(fdcReceiving$CtoN[fdcReceiving$dow==storage], col="gray", labels = TRUE)
}
layout(matrix(c(1,2,3,4,5,6,7),nrow=3,ncol=3,byrow=TRUE))
layout(matrix(c(1,2,3,4,5,6,7),nrow=3,ncol=3,byrow=TRUE))
layout(matrix(c(1,2,3,4,5,6,7,8,9),nrow=3,ncol=3,byrow=TRUE))
for (storage in levels(fdcReceiving$dow)){
print(storage)
hist(fdcReceiving$CtoN[fdcReceiving$dow==storage], col="gray", labels = TRUE)
}
?hist
layout(matrix(c(1,2,3,4,5,6,7,8,9),nrow=3,ncol=3,byrow=TRUE))
for (storage in levels(fdcReceiving$dow)){
print(storage)
hist(fdcReceiving$CtoN[fdcReceiving$dow==storage], col="gray", labels = TRUE, main="")
}
layout(matrix(c(1,2,3,4,5,6,7,8,9),nrow=3,ncol=3,byrow=TRUE))
for (dow in levels(fdcReceiving$dow)){
print(storage)
hist(fdcReceiving$CtoN[fdcReceiving$dow==dow], col="gray", labels = TRUE, main=dow)
}
?hist
layout(matrix(c(1,2,3,4,5,6,7,8,9),nrow=3,ncol=3,byrow=TRUE))
for (dow in levels(fdcReceiving$dow)){
print(storage)
hist(fdcReceiving$CtoN[fdcReceiving$dow==dow], col="gray", labels = TRUE, main=dow, ylab="")
}
for (dow in levels(fdcReceiving$dow)){
print(storage)
hist(fdcReceiving$CtoN[fdcReceiving$dow==dow], col="gray", labels = TRUE, main=dow, xlab="")
}
layout(matrix(c(1,2,3,4,5,6,7,8,9),nrow=3,ncol=3,byrow=TRUE))
for (dow in levels(fdcReceiving$dow)){
print(storage)
hist(fdcReceiving$CtoN[fdcReceiving$dow==dow], col="gray", labels = TRUE, main=dow, xlab="")
}
twoPeak <- c(rnorm(1000, mean=110, sd=4),rnorm(1000,sd=4,mean=100))
hist(twoPeak)
layout(1)
densityplot(twoPeak)
density(twoPeak)
densityplot(refined$CtoN)
refined<-fdcReceiving[which(q$y<=12),]
refined<-fdcReceiving[which(q$y<10),]
densityplot(refined$CtoN)
refined<-fdcReceiving[which(q$y<=12),]
q<-qqnorm(fdcReceiving$CtoN)
refined<-fdcReceiving[which(q$y<=12),]
densityplot(refined$CtoN)
qqnorm(refined$CtoN)
densityplot(refined$CtoN)
fdcReceiving[which(q$y>12),]
densityplot(~CtoN, group = dow, data = fdcReceiving[which(fdcReceiving$CtoN<30),], auto.key=T)
bymedian<-with(fdcReceiving, reorder(dow, -CtoN, median)) # reorder the factor by median of CtoN
bydow<-factor(fdcReceiving$dow, levels(fdcReceiving$dow)[c(4,2,6,7,5,1,3)]) # reorder the factor by day of the week
boxplot(CtoN~bydow, data = fdcReceiving, axes=T,outline=F, las=2)
boxplot(CtoN~bymedian, data = fdcReceiving, axes=T,outline=F, las=2)
boxplot(CtoN~bydow, data = fdcReceiving, axes=T,outline=F, las=2)
densityplot(~CtoN, data = fdcReceiving[which(fdcReceiving$CtoN<30),], auto.key=T)
densityplot(~CtoN, group = dow, data = fdcReceiving[which(fdcReceiving$CtoN<30),], auto.key=T)
/*q<-qqnorm(fdcReceiving$CtoN)*/
bydow<-tapply(fdcReceiving$CtoN, fdcReceiving$dow,mean) # average by day of the week
barplot(bydow)
head(fdcReceiving)
clear
cls
clr
x<-10
x
x+1
x+2
library(RODBC);
myconn <-odbcConnect("PDOperations_SQL", uid="corp_ops_01", pwd="corpops1"); # ODBC connection
# Facility receiving study
library(RODBC);
library(lattice);
myconn <-odbcConnect("PDOperations_SQL", uid="corp_ops_01", pwd="corpops1"); # ODBC connection
fdcReceiving <- sqlQuery(myconn,
"SELECT
a.fdc
,a.MoveTktDate
,a.MoveType
,DATENAME(DW,a.MoveTktDate) as dow
,sum(abs(a.unit_cube*a.MoveQuantity)) as extCubicInches
,SUM(abs(b.unit_nifo*a.MoveQuantity)) as nifo
,COUNT(a.cin6) as lines
FROM [PSC].[dbo].MoveTicketHistory a
left join dbo.pdProductMaster b on
(a.cin6=b.cin6)
WHERE a.fdc = 99 and (a.MoveTktDate BETWEEN '2012-10-1' AND '2013-6-1') and a.MoveType = 'Receiving'
group by
a.fdc
,a.MoveTktDate
,a.MoveType
,DATENAME(DW,a.MoveTktDate)") # pull data from db by SQL
close(myconn)
fdcReceiving$CtoN <- fdcReceiving$nifo/fdcReceiving$extCubicInches
dow.f<-factor(levels(fdcReceiving$dow))
head(fdcReceiving)
tail(fdcReceiving)
?head
?tail
head(fdcReceiving)
head(fdcReceiving)
m1<-mean(fdcReceiving$CtoN) # overall average
m1
hist(fdcReceiving$CtoN)
hist(fdcReceiving$CtoN)
m1<-mean(fdcReceiving$CtoN) # overall average
m2<-median(fdcReceiving$CtoN)
barplot(c(m1,m2))
m1/m2
hist(fdcReceiving$CtoN)
bydow<-tapply(fdcReceiving$CtoN, fdcReceiving$dow,mean) # average by day of the week
barplot(bydow)
head(fdcReceiving)
layout(matrix(c(1,2,3,4,5,6,7,8,9),nrow=3,ncol=3,byrow=TRUE))
for (dow in levels(fdcReceiving$dow)){
print(storage)
hist(fdcReceiving$CtoN[fdcReceiving$dow==dow], col="gray", labels = TRUE, main=dow, xlab="")
}
onePeak <- rnorm(1000, mean=100)
twoPeak <- c(rnorm(1000, mean=110, sd=4),rnorm(1000,sd=4,mean=100))
hist(twoPeak)
density(twoPeak)
densityplot(twoPeak)
hist(twoPeak)
mean(twoPeak)
median(twoPeak)
densityplot(twoPeak)
?densityplot
densityplot(~CtoN, data = fdcReceiving[which(fdcReceiving$CtoN<30),], auto.key=T)
densityplot(~CtoN, group = dow, data = fdcReceiving[which(fdcReceiving$CtoN<30),], auto.key=T)
bymedian<-with(fdcReceiving, reorder(dow, -CtoN, median)) # reorder the factor by median of CtoN
bydow<-factor(fdcReceiving$dow, levels(fdcReceiving$dow)[c(4,2,6,7,5,1,3)]) # reorder the factor by day of the week
boxplot(CtoN~bydow, data = fdcReceiving, axes=T,outline=F, las=2)
boxplot(CtoN~bymedian, data = fdcReceiving, axes=T,outline=F, las=2)
getwd()
readcsv("C:\Users\edward.wang\Documents\R code\PDC.csv")
readcsv("C:/Users/edward.wang/Documents/R code/PDC.csv")
read.csv("C:/Users/edward.wang/Documents/R code/PDC.csv")
data<-read.csv("C:/Users/edward.wang/Documents/R code/PDC.csv")
head(data)
head(data)
head(data)
str(data)
densityplot(PDC, data = data, auto.key=T)
library(lattice);
densityplot(PDC, data = data, auto.key=T)
densityplot(data$PDC, data = data, auto.key=T)
head(data)
data<-read.csv("C:/Users/edward.wang/Documents/R code/PDC.csv")
densityplot(data$PDC, data=data)
head(size)
head(data)
densityplot(data$TotalPats, data=data)
head(data)
cound(data)
count(data)
length(data)
length(data[,1])
densityplot(data$TotalPats, data=data, frequency=F)
densityplot(~data$PDC,data$TotalPats)
densityplot(~data$TotalPats, group = data$PDC)
densityplot(data$TotalPats, data=data)
head(data)
str(data)
# Facility receiving study
library(RODBC);
library(lattice);
myconn <-odbcConnect("PDOperations_SQL", uid="corp_ops_01", pwd="corpops1"); # ODBC connection
fdcReceiving <- sqlQuery(myconn,
"SELECT
a.fdc
,a.MoveTktDate
,a.MoveType
,DATENAME(DW,a.MoveTktDate) as dow
,sum(abs(a.unit_cube*a.MoveQuantity)) as extCubicInches
,SUM(abs(b.unit_nifo*a.MoveQuantity)) as nifo
,COUNT(a.cin6) as lines
FROM [PSC].[dbo].MoveTicketHistory a
left join dbo.pdProductMaster b on
(a.cin6=b.cin6)
WHERE a.fdc = 99 and (a.MoveTktDate BETWEEN '2013-6-1' AND '2013-6-1') and a.MoveType = 'Receiving'
group by
a.fdc
,a.MoveTktDate
,a.MoveType
,DATENAME(DW,a.MoveTktDate)") # pull data from db by SQL
close(myconn)
head(fdcReceiving)
library(RODBC);
library(lattice);
myconn <-odbcConnect("PDOperations_SQL", uid="corp_ops_01", pwd="corpops1"); # ODBC connection
fdcReceiving <- sqlQuery(myconn,
"SELECT
a.fdc
,a.MoveTktDate
,a.MoveType
,DATENAME(DW,a.MoveTktDate) as dow
,sum(abs(a.unit_cube*a.MoveQuantity)) as extCubicInches
,SUM(abs(b.unit_nifo*a.MoveQuantity)) as nifo
,COUNT(a.cin6) as lines
FROM [PSC].[dbo].MoveTicketHistory a
left join dbo.pdProductMaster b on
(a.cin6=b.cin6)
WHERE a.fdc = 99 and (a.MoveTktDate BETWEEN '2013-6-1' AND '2013-6-10') and a.MoveType = 'Receiving'
group by
a.fdc
,a.MoveTktDate
,a.MoveType
,DATENAME(DW,a.MoveTktDate)") # pull data from db by SQL
close(myconn)
head(fdcReceiving)
# Facility receiving study
library(RODBC);
library(lattice);
myconn <-odbcConnect("PDOperations_SQL", uid="corp_ops_01", pwd="corpops1"); # ODBC connection
fdcReceiving <- sqlQuery(myconn,
"SELECT
a.fdc
,a.MoveTktDate
,a.MoveType
,DATENAME(DW,a.MoveTktDate) as dow
,sum(abs(a.unit_cube*a.MoveQuantity)) as extCubicInches
,SUM(abs(b.unit_nifo*a.MoveQuantity)) as nifo
,COUNT(a.cin6) as lines
FROM [PSC].[dbo].MoveTicketHistory a
left join dbo.pdProductMaster b on
(a.cin6=b.cin6)
WHERE a.fdc = 99 and (a.MoveTktDate BETWEEN '2013-6-1' AND '2013-6-10') and a.MoveType = 'Receiving'
group by
a.fdc
,a.MoveTktDate
,a.MoveType
,DATENAME(DW,a.MoveTktDate)") # pull data from db by SQL
close(myconn)
head(fdcReceiving)
install.packages("rJava")
./RUN RTEST
./run rtest
libpaths
libpaths()
libPaths()
library
.library
library("rJava")
?rJava
??rJava
.libPaths
.libPaths()
comp1 <- max(.arg5)
comp2 <- max(.arg6)
df <- data.frame(.arg1,.arg2,.arg3,.arg4)
pc <- princomp(df, cor = TRUE)
vars <- pc$sdev^2
vars <- vars/sum(vars)
as.numeric(max(cumsum(vars[c(comp1,comp2)])))
ncomp <- max(.arg5)
df <- data.frame(.arg1,.arg2,.arg3,.arg4)
pc <- princomp(df, cor = TRUE)
as.numeric(pc$scores[,ncomp])
require(rpart)
load(file = "C:/tmp/RpartModel.RData")
newiris <- data.frame(Sepal.Length = .arg1,
Sepal.Width = .arg2,
Petal.Length = .arg3,
Petal.Width = .arg4)
as.character(predict(rpartModel, newiris, type ="class"))
result <- kmeans(x = data.frame(.arg1,.arg2,.arg3,.arg4), 3);
result$cluster
install.packages("rpart")
install.packages("rpart")
comp1 <- max(.arg5)
comp2 <- max(.arg6)
df <- data.frame(.arg1,.arg2,.arg3,.arg4)
pc <- princomp(df, cor = TRUE)
vars <- pc$sdev^2
vars <- vars/sum(vars)
as.numeric(max(cumsum(vars[c(comp1,comp2)])))
ncomp <- max(.arg5)
df <- data.frame(.arg1,.arg2,.arg3,.arg4)
pc <- princomp(df, cor = TRUE)
as.numeric(pc$scores[,ncomp])
require(rpart)
load(file = "C:/tmp/RpartModel.RData")
newiris <- data.frame(Sepal.Length = .arg1,
Sepal.Width = .arg2,
Petal.Length = .arg3,
Petal.Width = .arg4)
as.character(predict(rpartModel, newiris, type ="class"))
result <- kmeans(x = data.frame(.arg1,.arg2,.arg3,.arg4), 3);
result$cluster
library(Rserve)
Rserve()
library(Rserve)
Rserve()
Rserve_d
Rserve()
library(Rserve)
Rserve()
library(Rserve)
Rserve()
library(Rserve)
Rserve()
# TODO: Add comment
#
# Author: msc
###############################################################################
library("rdatamarket")
library("shiny")
#getting Data from datamarket.com
#life_expectancy and gdp
dminit("ba22bf5bdf044aaf980cdbde3504248c")
life_expectancy <- dmlist("15r2!hrp")
gdp <- dmlist("15c9!hd1")
#population
dminit("ba22bf5bdf044aaf980cdbde3504248c")
population <- dmlist("1cfl!r3d")
#renaming the value variable
names(gdp)[3] <- "GDP"
names(life_expectancy)[3] <- "life_expectancy"
names(population)[3] <- "Population"
#merge to one dataframe
data <- merge(gdp,life_expectancy, by = c("Country","Year"))
data <- merge(data, population, by = c("Country","Year"))
#data is only until 2008 complete
data <- data[data$Year <= 2008,]
#reducing data for only a few countries
data$Country <- as.character(data$Country)
selection <- c("Afghanistan","Australia","Austria","Belgium","Bolivia",
"Brazil","Cambodia","Azerbaijan", "Chile","China","Denmark","Estonia","Ethiopia","Finland","France",
"Georgia","Germany","Ghana","Greece","India","Indonesia","Iraq","Italy",
"Japan","Lithuania","Luxembourg","Mexico","New Zealand", "Niger", "Norway", "Poland", "Portugal",
"Rwanda", "Somalia", "South Africa", "Spain", "Sweden", "Switzerland", "Turkey",
"Uganda", "Ukraine", "United Kingdom", "United States", "Vietnam")
data <- subset(data, Country %in% selection)
setwd("C:\\Users\\edward.wang\\Documents\\R code")
#saving the data
save(data, file = "C:\\Users\\edward.wang\\Documents\\data.RData")
#run shiny app localy
runApp("C:\\Users\\edward.wang\\Documents\\R code\\shiny_beispiel")
