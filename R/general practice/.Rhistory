library(ggplot2)
library(nnet)         # multinom
library(rpart) # rf
library(e1071)        # svm
library(caret)
library(GGally)
install.packages("caret")
install.packages("GGally")
library(ggplot2)
library(nnet)         # multinom
library(rpart) # rf
library(e1071)        # svm
library(caret)
library(GGally)
install.packages("e1071")
install.packages("caret")
library(ggplot2)
library(nnet)         # multinom
library(rpart) # rf
library(e1071)        # svm
library(caret)
library(GGally)
install.packages("caret")
library(caret)
library(ggplot2)
library(nnet)         # multinom
library(rpart) # rf
library(e1071)        # svm
library(caret)
library(GGally)
library(tidyr)
library(dplyr)
# First look
head(iris)
summary(iris)
sum(is.na(iris))
# demo of tidyr
# gather() convert header to value. Convert any column except Species to key (column name of headers)-value (column name of value) pair
# arrange() sort by column. Species asc, type desc
col2val<-iris %>%
gather(type, value, -Species, na.rm=T) %>%
arrange(Species, desc(type))
head(col2val)
val2col<-col2val %>%
spread(type, value)
head(val2col)
# demo of dplyr
# inner_join, left_join, right_join, full_join
# pair plot
ggpairs(iris, aes(colour = Species, alpha = 0.4))
# Combine histogram and density plot
p<-ggplot(iris, aes(x=Petal.Width, color=Species, fill=Species)) +
geom_histogram(aes(y=..density..), fill="white") +
geom_density(alpha=.2)
p
# Split plot into panel
p<-ggplot(iris, aes(x=Petal.Width, color=Species, fill=Species)) +
geom_histogram(aes(y=..density..), fill="white") +
geom_density(alpha=.2) +
facet_grid(Species ~.) +
geom_vline()
p
set.seed(100)
x_col <- c(1:4)
y_col <- 5
train_index <- sample(1:nrow(iris), 0.8 * nrow(iris))
test_index <- setdiff(1:nrow(iris), train_index)
train<- iris[train_index, ]
test <- iris[test_index, ]
train[, x_col] <- scale(train[, x_col])
test[, x_col] <- scale(test[, x_col])
# Formula
formula <- as.formula('Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width')
# Multinormial
multinom.fit <- multinom(formula, data=train, family = "binomial")
print(multinom.fit)
# confusion matrix
table(predict(multinom.fit, test[,x_col], type = 'class'), test$Species)
AIC(multinom.fit)
BIC(multinom.fit)
#confusionMatrix(predict(multinom.fit, test[,x_col], type = 'class'), test$Species)
# Randomforest
rf.fit <- rpart(formula,data=train)
print(rf.fit)
table(predict(rf.fit, test[,x_col], type = 'class'), test$Species)
#confusionMatrix(predict(rf.fit, test[,x_col], type = 'class'), test$Species)
# SVM
svm.fit<- svm(formula, data = train)
print(svm.fit)
table(predict(svm.fit, test[,x_col], type = 'class'), test$Species)
#confusionMatrix(predict(svm.fit, test[,x_col], type = 'class'), test$Species)
print(rf.fit)
library(caret)
?confusiomatrix
install.packages("caret")
View(train)
train[, x_col] <- scale(train[, x_col])
test[, x_col] <- scale(test[, x_col])
View(train)
lm.fit<- lm(formula_pred, data = train)
formula_pred <- as.formula('Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width + Species')
lm.fit<- lm(formula_pred, data = train)
print(lm.fit)
summary(lm.fit)
fwd.model = step(lm.fit, direction='forward', scope=formula('Sepal.Length ~.'))
summry(fwd.model)
summary(fwd.model)
fwd.model = step(null.fit, direction='forward', scope=full.fit))
fwd.model = step(null.fit, direction='forward', scope=full.fit)
null.fit <- lm('Sepal.Length ~ 1', data = train)
full.fit <- lm('Sepal.Length ~ .', data = train)
fwd.model = step(null.fit, direction='forward', scope=full.fit)
fwd.model = step(null.fit, direction='forward', scope=full.fit)
summary(fwd.model)
fwd.model = step(null.fit, direction='forward', scope=list(lower=null.fit, upper=full.fit))
print(fwd.model)
print(full.fit)
bck.model = step(null.fit, direction='both', scope=list(upper=full.fit), data = train)
fwd.model = step(null.fit, direction='forward', scope=list(upper=full.fit))
fwd.model = step(null.fit, direction='forward', scope=list(upper=full.fit), date = train)
print(bck.model)
levels(iris$Species)
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length)
) %>%
filter(Species=="setosa") %>%
# inner_join, left_join, right_join, full_join
# pair plot
ggpairs(iris, aes(colour = Species, alpha = 0.4))
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species=="setosa") %>%
# inner_join, left_join, right_join, full_join
# pair plot
ggpairs(iris, aes(colour = Species, alpha = 0.4))
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species=="setosa") %>%
summary(iris)
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species=="setosa") %>%
head(iris)
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species=="setosa") %>%
head(iris)
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species=="setosa") %>%
iris
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species=="setosa") %>%
iris
head(val2col)
library(ggplot2)
library(nnet)         # multinom
library(rpart) # rf
library(e1071)        # svm
library(caret)
library(GGally)
library(tidyr)
library(dplyr)
head(iris)
summary(iris)
sum(is.na(iris))
col2val<-iris %>%
gather(type, value, -Species, na.rm=T) %>%
arrange(Species, desc(type))
head(col2val)
val2col<-col2val %>%
spread(type, value)
head(val2col)
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species=="setosa") %>%
iris
summary(iris)
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species=="setosa")
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species~="setosa")
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species!="setosa")
r
iris %>%
group_by(Species)%>%
mutate(percent = Petal.Length/mean(Petal.Length, na.rm=T)) %>%
filter(Species!="setosa")
iris
final[complete.cases(iris), ]
iris[complete.cases(iris), ]
iris[complete.cases(iris[, 2:3]), ]
iris[iris$Petal.Length > 6, ]
iris[iris$Petal.Length > 7, ]
iris[iris$Petal.Length > 6 && Sepal.Width > 3, ]
iris[iris$Petal.Length > 6 && Sepal.Width > 2, ]
iris[iris$Petal.Length > 6 & Sepal.Width > 2, ]
iris[iris$Petal.Length > 6 && iris$Sepal.Width > 2, ]
subset(iris, iris$Petal.Length > 6 && iris$Sepal.Width > 2)
subset(iris, Petal.Length > 6 && Sepal.Width > 2)
subset(iris, Petal.Length > 6)
subset(iris, Petal.Length > 6 & Petal.Width>2)
subset(iris, Petal.Length > 6 & Petal.Width > 2, select = Septal.Width:Petal.Width)
subset(iris, Petal.Length > 6 & Petal.Width > 2, select = Sepal.Width:Petal.Width)
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species!="setosa" && Petal.Length >= mean(Petal.Length, na.rm=T))
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species!="setosa" ) %>%
filter(Petal.Length >= mean(Petal.Length, na.rm=T))
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
#filter(Species!="setosa" ) %>%
filter(Petal.Length >= mean(Petal.Length, na.rm=T))
head(iris)
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
#filter(Species!="setosa" ) %>%
filter(Petal.Length >= mean(Petal.Length, na.rm=T))
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
#filter(Species!="setosa" ) %>%
filter(Petal.Length >= 0)
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
#filter(Species!="setosa" ) %>%
filter(Sepal.Length >= mean(Sepal.Length, na.rm=T))
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
#filter(Species!="setosa" ) %>%
filter(Sepal.Length >= mean(Sepal.Length, na.rm=T))
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species!="setosa" ) %>%
#filter(Sepal.Length >= mean(Sepal.Length, na.rm=T))
head(iris)
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species!="setosa" ) %>%
#filter(Sepal.Length >= mean(Sepal.Length, na.rm=T))
head(iris)
iris %>%
group_by(Species)%>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species!="setosa" )
iris %>%
group_by(Species)%>%
filter(Sepal.Length >= mean(Sepal.Length, na.rm=T)) %>%
summarise(
count = n(),
Petal.Length.mean = mean(Petal.Length, na.rm=T)
) %>%
filter(Species!="setosa" )
iris %>%
group_by(Species)%>%
mutate(percent = Petal.Length/mean(Petal.Length, na.rm=T)) %>%
filter(Species!="setosa") %>%
filter(Sepal.Length >= mean(Sepal.Length, na.rm=T)) %>%
iris
iris %>%
group_by(Species)%>%
mutate(percent = Petal.Length/mean(Petal.Length, na.rm=T)) %>%
filter(Species!="setosa") %>%
filter(Sepal.Length >= mean(Sepal.Length, na.rm=T)) %>%
iris
iris %>%
group_by(Species)%>%
mutate(percent = Petal.Length/mean(Petal.Length, na.rm=T)) %>%
filter(Species!="setosa") %>%
filter(Sepal.Length >= mean(Sepal.Length, na.rm=T))
iris %>%
group_by(Species)%>%
mutate(percent = Petal.Length/mean(Petal.Length, na.rm=T)) %>%
filter(Species!="setosa" && Sepal.Length >= mean(Sepal.Length, na.rm=T))
subset(iris, Petal.Length > quantile(Petal.Length, 0.95) &
Petal.Length < quantile(Petal.Length, 0.05) &
Petal.Width > 2, select = Sepal.Width:Petal.Width)
subset(iris, Petal.Length > quantile(Petal.Length, 0.95) &
Petal.Length < quantile(Petal.Length, 0.05) &
Petal.Width > 0.1, select = Sepal.Width:Petal.Width)
subset(iris, Petal.Length > quantile(Petal.Length, 0.95) &
Petal.Length < quantile(Petal.Length, 0.05) &
Petal.Width > 0.1, select = Sepal.Width:Petal.Width)
subset(iris, Petal.Length < quantile(Petal.Length, 0.95) &
Petal.Length > quantile(Petal.Length, 0.05) &
Petal.Width > 0.1, select = Sepal.Width:Petal.Width)
subset(iris, Petal.Length < quantile(Petal.Length, 0.95) &
Petal.Length > quantile(Petal.Length, 0.05) &
Petal.Width > 3, select = Sepal.Width:Petal.Width)
subset(iris, Petal.Length < quantile(Petal.Length, 0.95) &
Petal.Length > quantile(Petal.Length, 0.05) &
Petal.Width > 2, select = Sepal.Width:Petal.Width)
subset(iris, Petal.Length < quantile(Petal.Length, 0.95) &
Petal.Length > quantile(Petal.Length, 0.05) &
Petal.Width > 2.3, select = Sepal.Width:Petal.Width)
# Basic setup and library import
knitr::opts_chunk$set(echo = FALSE)
library(knitr)
library(dplyr)
kable(cars[1:5, ], caption = "a table")
p <- ggplot(iris, aes(x=Species, y=Petal.Length)) +
geom_boxplot()
p
p <- ggplot(iris, aes(x=Species, y=Petal.Length)) +
geom_boxplot(outlier.color = 'red', outlier.shape = 2)
p
p <- ggplot(iris, aes(x=Species, y=Petal.Length)) +
geom_boxplot(outlier.color = 'red', outlier.shape = 1)
p
p <- ggplot(train, aes(x=Species, y=Petal.Length)) +
geom_boxplot(outlier.color = 'red', outlier.shape = 1)
p
train[, x_col] <- scale(train[, x_col], center = T)
train<- iris[train_index, ]
test <- iris[test_index, ]
train[, x_col] <- scale(train[, x_col], center = T)
test[, x_col] <- scale(test[, x_col], center = T)
p <- ggplot(train, aes(x=Species, y=Petal.Length)) +
geom_boxplot(outlier.color = 'red', outlier.shape = 1)
p
colMeans(train)
colMeans(train[, x_col])
p <- ggplot(train, aes(x=Species, y=Petal.Length)) +
geom_boxplot(outlier.color = 'red', outlier.shape = 1)
p
train<- iris[train_index, ]
test <- iris[test_index, ]
colMeans(train[, x_col])
train[, x_col] <- scale(train[, x_col])
test[, x_col] <- scale(test[, x_col])
p <- ggplot(train, aes(x=Species, y=Petal.Length)) +
geom_boxplot(outlier.color = 'red', outlier.shape = 1)
p
train<- iris[train_index, ]
test <- iris[test_index, ]
colMeans(train[, x_col])
p <- ggplot(train, aes(x=Species, y=Petal.Length)) +
geom_boxplot(outlier.color = 'red', outlier.shape = 1)
p
train[, x_col] <- scale(train[, x_col])
test[, x_col] <- scale(test[, x_col])
p <- ggplot(train, aes(x=Species, y=Petal.Length)) +
geom_boxplot(outlier.color = 'red', outlier.shape = 1)
p
library(corrplot)
install.packages("corrplot")
if(F){
install.packages("ggplot2")
install.packages("nnet")
install.packages("rpart")
install.packages("e1071")
install.packages("caret")
install.packages("GGally")
install.packages("tidyr")
install.packages("dplyr")
install.packages("corrplot")
}
M<-cor(iris)
M<-cor(iris[,x_col])
head(round(M,2))
corrplot(corr, method="circle")
library(corrplot) # correlation plot
corrplot(corr, method="circle")
corrplot(M, method="circle")
corrplot(M, method="color")
corrplot(M, method="color", type ="upper")
corrplot(M, method="color", type ="upper", tl.srt=45, tl.col="black")
corrplot(M, method="color", type ="upper", tl.srt=45, tl.col="black", sig.level=0.2)
corrplot(M, method="color", type ="upper", tl.srt=45, tl.col="black", sig.level=0.02)
corrplot(M, method="color", type ="upper", tl.srt=45, tl.col="black", sig.level=0.02)
corrplot(M, method="color", type ="upper", tl.srt=45, tl.col="black", sig.level=0.8)
corrplot(M, method="color", type ="upper", tl.srt=45, tl.col="black", sig.level=0.9)
corrplot(M, method="color", type ="upper", tl.srt=45, tl.col="black", sig.level=0.9)
corrplot(M, method="color", type ="upper", tl.srt=45, tl.col="black")
corrplot(M, method="color", type ="upper", tl.srt=45, tl.col="black",diag=FALSE )
corrplot(M, method="color", type ="upper", tl.srt=45, tl.col="black",diag=FALSE,addCoef.col = "black")
